<Project>
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <LangVersion>12.0</LangVersion>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <Features>strict</Features>
    <AnalysisLevel>latest-all</AnalysisLevel>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
  </PropertyGroup>

  <PropertyGroup>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningsAsErrors />
    <NoWarn>$(NoWarn);CS1591</NoWarn>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <Deterministic>true</Deterministic>
    <ContinuousIntegrationBuild Condition="'$(GITHUB_ACTIONS)' == 'true' OR '$(CI)' == 'true'">true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <PropertyGroup>
    <Version Condition="'$(Version)' == ''">1.0.0</Version>
    <AssemblyVersion Condition="'$(AssemblyVersion)' == ''">1.0.0.0</AssemblyVersion>
    <FileVersion Condition="'$(FileVersion)' == ''">1.0.0.0</FileVersion>
    <InformationalVersion Condition="'$(InformationalVersion)' == ''">$(Version)+local</InformationalVersion>
    <Authors>Your Team</Authors>
    <Company>Your Organization</Company>
    <Product>Subscription Management API</Product>
    <Copyright>Copyright Â© $(Company) $([System.DateTime]::Now.Year)</Copyright>
    <NeutralLanguage>en-US</NeutralLanguage>
  </PropertyGroup>

  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <PropertyGroup>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisMode>All</AnalysisMode>
    <CodeAnalysisTreatWarningsAsErrors>false</CodeAnalysisTreatWarningsAsErrors>
    <RunAnalyzersDuringBuild>true</RunAnalyzersDuringBuild>
    <RunAnalyzersDuringLiveAnalysis>true</RunAnalyzersDuringLiveAnalysis>
    <ReportAnalyzer>true</ReportAnalyzer>
    <SonarQubeTestProject Condition="$(MSBuildProjectName.Contains('Test'))">true</SonarQubeTestProject>
    <SonarQubeExclude Condition="$(MSBuildProjectName.Contains('Migrations'))">true</SonarQubeExclude>
  </PropertyGroup>

  <PropertyGroup Condition="$(MSBuildProjectName.Contains('Test'))">
    <IsTestProject>true</IsTestProject>
    <IsPackable>false</IsPackable>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);CS1591;CA1707;CA1062</NoWarn>
    <CollectCoverage>true</CollectCoverage>
    <CoverletOutputFormat>opencover,cobertura</CoverletOutputFormat>
    <CoverletOutput>$(OutputPath)coverage/</CoverletOutput>
    <ExcludeByFile>**/Migrations/**/*.cs</ExcludeByFile>
    <ExcludeByAttribute>GeneratedCodeAttribute,ExcludeFromCodeCoverageAttribute</ExcludeByAttribute>
  </PropertyGroup>

  <PropertyGroup>
    <ServerGarbageCollection>true</ServerGarbageCollection>
    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>
    <RetainVMGarbageCollection>false</RetainVMGarbageCollection>
    <TieredCompilation>true</TieredCompilation>
    <TieredCompilationQuickJit>true</TieredCompilationQuickJit>
    <TieredCompilationQuickJitForLoops>true</TieredCompilationQuickJitForLoops>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageTags>subscription;management;clean-architecture;ddd</PackageTags>
    <PackageProjectUrl>https://github.com/yasserebrahimi/SubscriptionManagement</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <RepositoryUrl>https://github.com/yasserebrahimi/SubscriptionManagement.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <RepositoryBranch>main</RepositoryBranch>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReadmeFile Condition="Exists('$(MSBuildProjectDirectory)/README.md')">README.md</PackageReadmeFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
    <PackageReference Include="GitVersion.MsBuild" Version="5.12.0" Condition="'$(GITHUB_ACTIONS)' == 'true'">
      <PrivateAssets>All</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup Condition="'$(IsTestProject)' != 'true'">
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="8.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.556">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="SonarAnalyzer.CSharp" Version="9.16.0.82469">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Meziantou.Analyzer" Version="2.0.146">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="SecurityCodeScan.VS2019" Version="5.6.7">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup Condition="'$(IsTestProject)' == 'true'">
    <PackageReference Include="coverlet.collector" Version="6.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="coverlet.msbuild" Version="6.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Using Include="System" />
    <Using Include="System.Collections.Generic" />
    <Using Include="System.Linq" />
    <Using Include="System.Threading" />
    <Using Include="System.Threading.Tasks" />
    <Using Include="Microsoft.Extensions.Logging" />
    <Using Include="Microsoft.Extensions.DependencyInjection" />
  </ItemGroup>

  <ItemGroup>
    <None Include="$(MSBuildProjectDirectory)/README.md" Pack="true" PackagePath="/" Condition="Exists('$(MSBuildProjectDirectory)/README.md')" />
    <None Include="$(MSBuildProjectDirectory)/icon.png" Pack="true" PackagePath="/" Condition="Exists('$(MSBuildProjectDirectory)/icon.png')" />
  </ItemGroup>

  <PropertyGroup>
    <BaseOutputPath Condition="'$(GITHUB_ACTIONS)' == 'true'">$(MSBuildProjectDirectory)/bin/</BaseOutputPath>
    <BaseIntermediateOutputPath Condition="'$(GITHUB_ACTIONS)' == 'true'">$(MSBuildProjectDirectory)/obj/</BaseIntermediateOutputPath>
    <ArtifactsPath Condition="'$(GITHUB_ACTIONS)' == 'true'">$(MSBuildThisFileDirectory)artifacts/</ArtifactsPath>
    <PackageOutputPath Condition="'$(GITHUB_ACTIONS)' == 'true'">$(ArtifactsPath)packages/</PackageOutputPath>
  </PropertyGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent" Condition="'$(GITHUB_ACTIONS)' != 'true'">
    <Message Text="Starting build for $(MSBuildProjectName)" Importance="high" />
  </Target>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="'$(Configuration)' == 'Release'">
    <Message Text="Build completed for $(MSBuildProjectName) - Version: $(Version)" Importance="high" />
  </Target>

  <PropertyGroup Condition="$(MSBuildProjectName.StartsWith('SubscriptionManagement.Domain'))">
    <DefineConstants>$(DefineConstants);DOMAIN_LAYER</DefineConstants>
    <NoWarn>$(NoWarn);CA1040</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="$(MSBuildProjectName.StartsWith('SubscriptionManagement.Application'))">
    <DefineConstants>$(DefineConstants);APPLICATION_LAYER</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$(MSBuildProjectName.StartsWith('SubscriptionManagement.Infrastructure'))">
    <DefineConstants>$(DefineConstants);INFRASTRUCTURE_LAYER</DefineConstants>
    <NoWarn>$(NoWarn);CA1063;CA1816</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="$(MSBuildProjectName.StartsWith('SubscriptionManagement.WebAPI'))">
    <DefineConstants>$(DefineConstants);PRESENTATION_LAYER</DefineConstants>
    <NoWarn>$(NoWarn);CA1052</NoWarn>
  </PropertyGroup>
</Project>
